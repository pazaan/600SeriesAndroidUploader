buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.21.6'
        classpath 'io.realm:realm-gradle-plugin:1.1.0'
    }
}
plugins {
    id 'net.researchgate.release' version '2.3.4'
}

apply plugin: 'com.android.application'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
}

apply plugin: 'io.fabric'
apply plugin: 'realm-android'

def gitVersion() {
    def process = ['sh', '-c', 'git tag -l | grep -c ".*" -'].execute().text.trim()
    return process.toInteger() + 1
}

def getBugfenderApiKey() {
    Properties properties = new Properties()
    properties.load(new FileInputStream("app/bugfender.properties"))
    return "\"" + properties.getProperty("apiKey", "") + "\""
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    // FIXME - replace with URLConnection. This is used in GetHmacAndKeyActivity.
    useLibrary 'org.apache.http.legacy'

    applicationVariants.all { variant ->
        variant.resValue "string", "versionName", variant.versionName
    }

    defaultConfig {
        applicationId "info.nightscout.android"
        minSdkVersion 14
        targetSdkVersion 23
        versionName project.properties['version']
        versionCode gitVersion()
        buildConfigField "String", "BUGFENDER_API_KEY", getBugfenderApiKey()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    lintOptions {
        // Dag nabbit :(
        // Because of http://stackoverflow.com/questions/35492259/lint-error-on-okio
        warning 'InvalidPackage'
    }
}

task signRelease << {
    def command = [
            'jarsigner',
            '-verbose',
            '-sigalg',
            'SHA1withRSA',
            '-digestalg',
            'SHA1',
            '-keystore',
            '/Users/lgoedhart/keystores/nightscout_android.jks',
            'app/build/outputs/apk/app-release-unsigned.apk',
            'nightscoutandroidkey'
    ]

    def proc = new ProcessBuilder(command)
            .redirectOutput(ProcessBuilder.Redirect.INHERIT)
            .redirectInput(ProcessBuilder.Redirect.INHERIT)
            .redirectError(ProcessBuilder.Redirect.INHERIT)
            .start()

    proc.waitFor()

    if (0 != proc.exitValue()) {
        throw new RuntimeException("Could not sign APK.")
    }
}

task zipalignRelease << {
    def command = [
            '/Users/lgoedhart/Library/Android/sdk/build-tools/23.0.3/zipalign',
            '-v',
            '4',
            'app/build/outputs/apk/app-release-unsigned.apk',
            'app/build/outputs/apk/640g-android-uploader.apk'
    ]

    def proc = new ProcessBuilder(command)
            .redirectOutput(ProcessBuilder.Redirect.INHERIT)
            .redirectInput(ProcessBuilder.Redirect.INHERIT)
            .redirectError(ProcessBuilder.Redirect.INHERIT)
            .start()

    proc.waitFor()

    if (0 != proc.exitValue()) {
        throw new RuntimeException("Could not align APK.")
    }
}

release {
    tagTemplate = 'v${version}'
    buildTasks = ['build']
    beforeReleaseBuild.dependsOn 'clean'
    afterReleaseBuild.dependsOn 'signRelease', 'zipalignRelease'
}

dependencies {
    compile files('libs/slf4j-api-1.7.2.jar')
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
    compile('com.mikepenz:materialdrawer:5.2.9@aar') {
        transitive = true
    }
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'com.mikepenz:google-material-typeface:2.2.0.1.original@aar'
    compile 'uk.co.chrisjenx:calligraphy:2.2.0'
    compile 'com.bugfender.sdk:android:0.4.4'
    compile 'com.github.PhilJay:MPAndroidChart:v3.0.0-beta1'
    compile 'com.github.PhilJay:MPAndroidChart-Realm:v1.1.0@aar'
    compile 'com.android.support:support-v4:23.4.0'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
}